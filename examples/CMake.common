#add_executable(${PROJECT_NAME} main.cpp)

# Each example can define the particular hermes library to link with, or not
# define anything, in which case the "real" version will be used if hermes was
# built with "real" support, otherwise the "complex" version will be used:
if(NOT DEFINED HERMES)
    if(REAL)
        set(HERMES ${HERMES_REAL_BIN})
    else(REAL)
        set(HERMES ${HERMES_CPLX_BIN})
    endif(REAL)
endif(NOT DEFINED HERMES)

if(COMPLEX)
# if the complex version is being used, define 'COMPLEX'
if(${HERMES} STREQUAL ${HERMES_CPLX_BIN})
    set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS -DCOMPLEX)
endif(${HERMES} STREQUAL ${HERMES_CPLX_BIN})
endif(COMPLEX)

if(DEBUG)
    set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ${CMAKE_CXX_FLAGS_DEBUG})
endif(DEBUG)

include_directories(${UMFPACK_INCLUDE_DIR} ${AMD_INCLUDE_DIR})
include_directories(${CMAKE_CURRENT_SOURCE_DIR})
include_directories(${hermes2d_SOURCE_DIR}/src)
include_directories(${TRILINOS_INCLUDE_DIR})
target_link_libraries(${PROJECT_NAME} ${HERMES} ${UMFPACK_LIBRARY}
        ${AMD_LIBRARY} ${BLAS_LIBRARIES} ${LAPACK_LIBRARIES} ${TRILINOS_LIBRARIES})
add_dependencies(${PROJECT_NAME} ${HERMES})
